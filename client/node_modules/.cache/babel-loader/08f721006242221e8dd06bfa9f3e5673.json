{"ast":null,"code":"var _jsxFileName = \"/Users/kathrynlu/map-react-app-1.0/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  useState\n} = require(\"react\");\n\nfunction Piece(_ref) {\n  let {\n    country,\n    onClick,\n    onMouseEnter,\n    onMouseExit,\n    selectedCountry,\n    hoveredCountry // Why are there just terms here? states? for a Piece\n\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"231\",\n    height: \"121\",\n    viewBox: \"0 0  231 121\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseExit,\n      className: \"shape\",\n      fill: selectedCountry === country ? \"red\" : \"gray\",\n      stroke: hoveredCountry === country ? \"red\" : \"black\",\n      d: \"M49 0.5L1 120L230 114L136 73L209.5 0.5H49Z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Piece;\nexport default function App() {\n  _s();\n\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [hoveredCountry, setHoveredCountry] = useState(\"\");\n  const countries = [{\n    name: \"asia\",\n    pieces: [Piece, Piece, Piece]\n  }, {\n    name: \"europe\",\n    pieces: [Piece, Piece, Piece]\n  }, {\n    name: \"northamerica\",\n    pieces: [Piece, Piece, Piece]\n  }];\n  console.log(selectedCountry);\n  return countries.map(country => {\n    const {\n      name,\n      pieces\n    } = country;\n    return pieces.map(Piece => {\n      return /*#__PURE__*/_jsxDEV(Piece, {\n        country: name,\n        selectedCountry: selectedCountry,\n        hoveredCountry: hoveredCountry,\n        onClick: () => setSelectedCountry(name),\n        onMouseEnter: () => setHoveredCountry(name),\n        onMouseExit: () => setHoveredCountry(\"\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    });\n  });\n}\n\n_s(App, \"zBGtJEgybJHNSjkjMGnDVhsaJKw=\");\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Piece\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","require","Piece","country","onClick","onMouseEnter","onMouseExit","selectedCountry","hoveredCountry","App","setSelectedCountry","setHoveredCountry","countries","name","pieces","console","log","map"],"sources":["/Users/kathrynlu/map-react-app-1.0/src/App.js"],"sourcesContent":["import \"index.css\";\nconst{ useState } = require(\"react\");\n\nfunction Piece({\n    country,\n    onClick,\n    onMouseEnter,\n    onMouseExit,\n    selectedCountry,\n    hoveredCountry\n    // Why are there just terms here? states? for a Piece\n}) {\n\n    return (\n        <svg width = \"231\" height= \"121\" viewBox = \"0 0  231 121\" fill = \"none\"  xmlns=\"http://www.w3.org/2000/svg\">\n\n            <path onClick={onClick} onMouseEnter={onMouseEnter} onMouseLeave={onMouseExit} className=\"shape\" fill={selectedCountry === country ? \"red\" : \"gray\"} stroke={hoveredCountry === country ? \"red\" : \"black\"} d=\"M49 0.5L1 120L230 114L136 73L209.5 0.5H49Z\"/>\n        </svg>\n    );\n}\nexport default function App() {\n    const [selectedCountry, setSelectedCountry] = useState(\"\");\n    const [hoveredCountry, setHoveredCountry] = useState(\"\");\n  \n    const countries = [\n      { name: \"asia\", pieces: [Piece, Piece, Piece] },\n      { name: \"europe\", pieces: [Piece, Piece, Piece] },\n      { name: \"northamerica\", pieces: [Piece, Piece, Piece] }\n    ];\n  \n    console.log(selectedCountry);\n  \n    return countries.map((country) => {\n      const { name, pieces } = country;\n      return pieces.map((Piece) => {\n        return (\n          <Piece\n            country={name}\n            selectedCountry={selectedCountry}\n            hoveredCountry={hoveredCountry}\n            onClick={() => setSelectedCountry(name)}\n            onMouseEnter={() => setHoveredCountry(name)}\n            onMouseExit={() => setHoveredCountry(\"\")}\n          />\n        );\n      });\n    });\n  }\n"],"mappings":";;;AAAA,OAAO,WAAP;;;AACA,MAAK;EAAEA;AAAF,IAAeC,OAAO,CAAC,OAAD,CAA3B;;AAEA,SAASC,KAAT,OAQG;EAAA,IARY;IACXC,OADW;IAEXC,OAFW;IAGXC,YAHW;IAIXC,WAJW;IAKXC,eALW;IAMXC,cANW,CAOX;;EAPW,CAQZ;EAEC,oBACI;IAAK,KAAK,EAAG,KAAb;IAAmB,MAAM,EAAE,KAA3B;IAAiC,OAAO,EAAG,cAA3C;IAA0D,IAAI,EAAG,MAAjE;IAAyE,KAAK,EAAC,4BAA/E;IAAA,uBAEI;MAAM,OAAO,EAAEJ,OAAf;MAAwB,YAAY,EAAEC,YAAtC;MAAoD,YAAY,EAAEC,WAAlE;MAA+E,SAAS,EAAC,OAAzF;MAAiG,IAAI,EAAEC,eAAe,KAAKJ,OAApB,GAA8B,KAA9B,GAAsC,MAA7I;MAAqJ,MAAM,EAAEK,cAAc,KAAKL,OAAnB,GAA6B,KAA7B,GAAqC,OAAlM;MAA2M,CAAC,EAAC;IAA7M;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;KAhBQD,K;AAiBT,eAAe,SAASO,GAAT,GAAe;EAAA;;EAC1B,MAAM,CAACF,eAAD,EAAkBG,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACQ,cAAD,EAAiBG,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;EAEA,MAAMY,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,MAAR;IAAgBC,MAAM,EAAE,CAACZ,KAAD,EAAQA,KAAR,EAAeA,KAAf;EAAxB,CADgB,EAEhB;IAAEW,IAAI,EAAE,QAAR;IAAkBC,MAAM,EAAE,CAACZ,KAAD,EAAQA,KAAR,EAAeA,KAAf;EAA1B,CAFgB,EAGhB;IAAEW,IAAI,EAAE,cAAR;IAAwBC,MAAM,EAAE,CAACZ,KAAD,EAAQA,KAAR,EAAeA,KAAf;EAAhC,CAHgB,CAAlB;EAMAa,OAAO,CAACC,GAAR,CAAYT,eAAZ;EAEA,OAAOK,SAAS,CAACK,GAAV,CAAed,OAAD,IAAa;IAChC,MAAM;MAAEU,IAAF;MAAQC;IAAR,IAAmBX,OAAzB;IACA,OAAOW,MAAM,CAACG,GAAP,CAAYf,KAAD,IAAW;MAC3B,oBACE,QAAC,KAAD;QACE,OAAO,EAAEW,IADX;QAEE,eAAe,EAAEN,eAFnB;QAGE,cAAc,EAAEC,cAHlB;QAIE,OAAO,EAAE,MAAME,kBAAkB,CAACG,IAAD,CAJnC;QAKE,YAAY,EAAE,MAAMF,iBAAiB,CAACE,IAAD,CALvC;QAME,WAAW,EAAE,MAAMF,iBAAiB,CAAC,EAAD;MANtC;QAAA;QAAA;QAAA;MAAA,QADF;IAUD,CAXM,CAAP;EAYD,CAdM,CAAP;AAeD;;GA3BqBF,G;;MAAAA,G"},"metadata":{},"sourceType":"module"}